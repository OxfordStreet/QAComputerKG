name,subject,chapter,desc,priority
计算机程序,C语言,1,"所谓程序,就是一组计算机能识别和执行的指令。每一条指令使计算机执行特定的操作。只要让计算机执行这个程序，计算机就会“自动地""执行各条指令,有条不紊地进行工作。",4
计算机语言,C语言,1,计算机语言（Computer Language）指用于人与计算机之间通讯的语言。计算机语言是人与计算机之间传递信息的媒介。,4
机器语言,C语言,1,计算机能直接识别和接受的二进制代码称为机器指令(machineinstruction)。机器指令的集合就是该计算机的机器语言(machinelanguage)。,4
汇编语言,C语言,1,汇编语言（assembly language）是一种用于电子计算机、微处理器、微控制器或其他可编程器件的低级语言，亦称为符号语言。,4
高级语言,C语言,1,高级语言（High-level programming language）是一种独立于机器，面向过程或对象的语言。,4
C语言特点,C语言,1,（1）简洁的语言（2）具有结构化的控制语句（3）丰富的数据类型（4）丰富的运算符（5）可对物理地址进行直接操作（6）代码具有较好的可移植性（7）可生成高质量、目标代码执行效率高的程序,4
算法的特征,C语言,2,有穷性；确切性；输入项；输出项；可行性,4
算法的描述方法,C语言,2,描述算法的方法有多种，常用的有自然语言、结构化流程图、伪代码和PAD图等。,4
常量,C语言,3,"在程序运行过程中,其值不能被改变的量称为常量。",4
变量,C语言,3,"在程序运行期间,变量的值是可以改变的。",4
标识符,C语言,3,在计算机编程语言中，标识符是用户编程时使用的名字，用于给变量、常量、函数、语句块等命名，以建立起名称与使用之间的关系。标识符通常由字母和数字以及其它字符构成。,4
整型数据,C语言,3,整型（INTEGER）数据是不包含小数部分的数值型数据，用字母I表示。整型数据只用来表示整数，以二进制形式存储。,4
字符型数据,C语言,3,字符型（Character）数据是不具计算能力的文字数据类型，它包括中文字符、英文字符、数字字符和其他ASCⅡ字符，其长度（即字符个数）范围是0-255个字符，即0x00至0xFF。,4
浮点型数据,C语言,3,浮点型数据分为 浮点型常量和浮点型变量,4
C语句分类,C语言,3,控制语句；函数调用语句；表达式语句；空语句；复合语句,4
字符数据的输入输出,C语言,3,用putchar函数输出一个字符；用getchar函数输入一个字符,4
关系运算符,C语言,4,关系运算符有6种关系，分别为<小于、>大于、<=小于等于、>=大于等于、=等于、!=不等于。,4
逻辑运算符,C语言,4,基本的操作符有：“非”（&not;）、“与”（∧）、“或”（∨）、“条件”（→）以及“双条件”（?）。,4
条件运算符,C语言,4,表达式为：表达式1？表达式2：表达式3,3
循环结构程序设计,C语言,5,用while语句实现循环；用do...while语句实现循环；用for语句实现循环,4
break语句,C语言,5,break语句是中断当前循环，通常在 switch 语句和 while、for、for...in、或 do...while 循环中使用 break 语句。执行 break 语句会退出当前循环或语句，并开始脚本执行紧接着的语句。,3
continue语句,C语言,5,表示结束本次循环，而不终止整个循环的执行。而是结束本次循环，进行下一次循环。continue语句只结束本次循环，而不终止整个循环的执行。而break语句则是结束整个循环过程，不再判断执行循环的条件是否成立。,3
数组,C语言,6,所谓数组，是有序的元素序列。数组是在程序设计中，为了处理方便， 把具有相同类型的若干元素按有序的形式组织起来的一种形式。这些有序排列的同类数据元素的集合称为数组。数组是用于储存多个相同类型数据的集合。,2
二维数组,C语言,6,二维数组常称为矩阵(matrix)。把二维数组写成行(column)和列(row)的排列形式，可以有助于形象化地理解二维数组的逻辑结构。,2
字符数组,C语言,6,字符数组是指用来存放字符数据的数组。其定义的一般形式为： char 数组名[数据长度] 。字符数组用于存放字符或字符串，字符数组中的一个元素存放一个字符，它在内存中占用一个字节。C语言中没有字符串类型，字符串是存放在字符型数组中的。,2
字符数组的输入输出,C语言,6,(1)逐个字符输人输出。用格式符“%c”输人或输出一一个字符；(2)将整个字符串--次输人或输出。用“%s”格式符，意思是对字符串(string)的输人输出。,3
输出字符串的函数,C语言,6,puts函数；其一般形式为：puts (字符数组),3
字符串连接函数,C语言,6,"strcat函数；其一般形式为：strcat(字符数组1,字符数组2)",3
字符串复制函数,C语言,6,"strepy和strncpy函数；其一般形式为：strcpy(字符数组1,字符串2)",3
字符串比较函数,C语言,6,"strcmp函数；其一般形式为：strcmp(字符串1,字符串2)",3
测字符串长度的函数,C语言,6,strlen函数；其一般形式为：strlen (字符数组),3
转换为小写的函数,C语言,6,strlwr函数；其一般形式为：strIwr (字符串),3
转换为大写的函数,C语言,6,strupr函数；其一般形式为：strupr (字符串),3
函数调用时的数据传递,C语言,7,形式参数和实际参数；实参和形参间的数据传递,3
数组元素作函数实参,C语言,7,"在用数组元素作函数实参时,把实参的值传给形参，是“值传递""方式。数据传递的方向是从实参传到形参，单向传递。",3
数组名作函数参数,C语言,7,用数组元素作实参时，向形参变量传递的是数组元素的值，而用数组名作函数实参时，向形参(数组名或指针变量)传递的是数组首元素的地址。,3
局部变量,C语言,7,"在复合语句内定义的变量只在本复合语句范围内有效,只有在本复合语句内才能引用它们。在该复合语句以外是不能使用这些变量的，以上这些称为“局部变量”。",2
全局变量,C语言,7,"在函数内定义的变量是局部变量,而在函数之外定义的变量称为外部变量，外部变量是全局变量(也称全程变量)。全局变量可以为本文件中其他函数所共用。",2
静态存储方式,C语言,7,静态存储方式是指在程序运行期间由系统分配固定的存储空间的方式。,2
动态存储方式,C语言,7,动态存储方式则是在程序运行期间根据需要进行动态的分配。,2
内部函数,C语言,7,"如果一个函数只能被本文件中其他函数所调用,它称为内部函数。在定义内部函数时，在函数名和函数类型的前面加static,即:static类型名函数名(形参表);",2
外部函数,C语言,7,"如果在定义函数时，在函数首部的最左端加关键字extern,则此函数是外部函数,可供其他文件调用。如函数首部可以为extern int fun (int a, int b)",2
指针,C语言,8,指针，是C语言中的一个重要概念及其特点，也是掌握C语言比较困难的部分。指针也就是内存地址，指针变量是用来存放内存地址的变量，不同类型的指针变量所占用的存储单元长度是相同的，而存放数据的变量因数据的类型不同，所占用的存储空间长度也不同。有了指针以后，不仅可以对数据本身，也可以对存储数据的变量地址进行操作。,1
指针变量,C语言,8,指针变量是存放一个变量地址的变量，不同于其他类型变量，它是专门用来存放内存地址的，也称为地址变量。定义指针变量的一般形式为：类型说明符*变量名。,1
定义指针变量,C语言,8,定义指针变量的一般形式为：类型名* 指针变量名;,2
数组元素的指针,C语言,8,一一个变量有地址，一个数组包含若千元素，每个数组元素都在内存中占用存储单元，它们都有相应的地址。指针变量既然可以指向变量，当然也可以指向数组元素(把某一元素的地址放到一个指针变量中)。所谓数组元素的指针就是数组元素的地址。,2
返回指针值的函数,C语言,8,定义返回指针值的函数的一般形式为:类型名*函数名(参数表列);,3
指针数组,C语言,8,"一个数组,若其元素均为指针类型数据,称为指针数组，也就是说,指针数组中的每一个元素都存放-一个地址，相当于一个指针变量。",3
内存的动态分配,C语言,8,"C语言允许建立内存动态分配区域，以存放一些临时用的数据,这些数据不必在程序的声明部分定义,也不必等到函数结束时才释放，而是需要时随时开辟,不需要时随时释放。这些数据是临时存放在一个特别的自由存储区，称为堆(heap)区。",2
malloc函数,C语言,8,其函数原型为void￥malloc( unsigned int size) ;,2
calloc函数,C语言,8,"其函数原型为void * calloc( unsigned n, unsigned size) ;",2
free函数,C语言,8,其函数原型为void free(void * p) ;,2
realloc函数,C语言,8,"其函数原型为void * realloc( void *p, unsigned int size) ;",2
结构体,C语言,9,在C语言中，结构体(struct)指的是一种数据结构，是C语言中聚合数据类型(aggregate data type)的一类。结构体可以被声明为变量、指针或数组等，用以实现较复杂的数据结构。结构体同时也是一些元素的集合，这些元素称为结构体的成员(member)，且这些成员可以为不同的类型，成员一般用名字访问。,1
结构体变量的初始化和引用,C语言,9,"在定义结构体变量时,可以对它初始化，即赋予初始值。然后可以引用这个变量,例如输出它的成员的值。",2
结构体指针,C语言,9,"所谓结构体指针就是指向结构体变量的指针,一个结构体变量的起始地址就是这个结构体变量的指针。如果把-一个结构体变量的起始地址存放在-个 指针变量中,那么,这个指针变量就指向该结构体变量。",3
链表,C语言,9,链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的。链表由一系列结点（链表中每一个元素称为结点）组成，结点可以在运行时动态生成。每个结点包括两个部分：一个是存储数据元素的数据域，另一个是存储下一个结点地址的指针域。,1
建立动态链表,C语言,9,"所谓建立动态链表是指在程序执行过程中从无到有地建立起一个链表，即一个一个地开辟结点和输人各结点数据,并建立起前后相链的关系。",2
共用体类型,C语言,9,在进行某些算法的C语言编程的时候，需要使几种不同类型的变量存放到同一段内存单元中。也就是使用覆盖技术，几个变量互相覆盖。这种几个不同的变量共同占用一段内存的结构，在C语言中，被称作“共用体”类型结构，简称共用体，也叫联合体。,3
枚举类型,C语言,9,在C语言等计算机编程语言中是一种构造数据类型 [1]  。它用于声明一组命名的常数，当一个变量有几种可能的取值时，可以将它定义为枚举类型。使用格式：枚举类型放在窗体模块、标准模块或共用模块中的声明部分，通过enum语句来定义。,1
typedef声明类型,C语言,9,typedef声明类型，声明一个新的类型名来代替已有的类型,2
程序文件,C语言,10,包括源程序文件(后缀为. c)、目标文件(后缀为. obj)、可执行文件(后缀为.exe)等。这种文件的内容是程序代码。,
",3,,,",,,,
数据文件,C语言,10,"文件的内容不是程序，而是供程序运行时读写的数据,如在程序运行过程中输出到磁盘(或其他外部设备)的数据,或在程序运行过程中供读人的数据。如一批学生的成绩数据、货物交易的数据等。",3
文件名,C语言,10,一个文件要有一个唯一的文件标识，以便用户识别和引用。文件标识包括3部分: (1)文件路径; (2)文件名主干; (3)文件后缀。,3
打开与关闭文件,C语言,10,"用fopen函数打开数据文件：fopen(文件名,使用文件方式); 用fclose函数关闭数据文件fclose(文件指针) ;",3
文件位置标记的定位,C语言,10,用rewind函数使文件位置标记指向文件开头；用fseek函数改变文件位置标记；用ftell函数测定文件位置标记的当前位置；,4
文件读写的出错检测,C语言,10,C提供一些函数用来检查输人输出函数调用时可能出现的错误。1. ferror函数；2. clearerr 函数,4
ferror函数,C语言,10,"在调用各种输人输出函数(如putc, getc, fread,fwrite等)时，如果出现错误,除了函数返回值有所反映外,还可以用ferror函数检查。它的一般调用形式为ferror(fp) ;",3
clearerr 函数,C语言,10,"clearerr的作用是使文件错误标志和文件结束标志置为0。假设在调用-一个输人输出函数时出现错误,ferror函数值为一个非零值。应该立即调用clearerr(fp)，使ferror(fp) 的值变成0,以便再进行下一次的检测。",3
整型常量,C语言,11,十进制常数；八进制常数(以0开头的数字序列)；十六进制常数(以0x开头的数字序列)；长整型常数(在数字后加字符L或I)。,2
字符常量,C语言,11,"用单撇号括起来的一个字符,可以使用转义字符。",3
算术表达式,C语言,11,"整型表达式:参加运算的运算量是整型量,结果也是整型数。实型表达式:参加运算的运算量是实型量,运算过程中先转换成double型,结果为double型。",3
逻辑表达式,C语言,11,"用逻辑运算符连接的整型量,结果为-一个整数(0或1)。逻辑表达式可以认为是整型表达式的一种特殊形式。",3
强制类型转换,C语言,11,用“(类型)”运算符使表达式的类型进行强制转换，如(float)a。,2
赋值表达式,C语言,11,将赋值号“=”右侧表达式的值赋给赋值号左边的变量。赋值表达式的值为执行赋值后被赋值的变量的值。,3
条件表达式,C语言,11,"其形式为：逻辑表达式?表达式1:表达式2  ；逻辑表达式的值若为非零,则条件表达式的值等于表达式1的值;若逻辑表达式的值为零,则条件表达式的值等于表达式2的值。",2
